## はじめに

このドキュメントは、Cline / RooCode が開発を行う際のガイドラインをまとめたものです。
このガイドラインに従って、開発を行ってください。

## 基本ルール

- 指示に従う:
  - 要件や指示に従って作業を進める
  - 作業の進捗や問題が発生した場合は適宜報告

- 自律的な問題解決:
  - エラーや何かしらの問題が発生したら、自律的に問題分析と解決案を提示
  - 複数のアプローチがある場合は、推奨案を明示

- 既存コードの尊重:
  - 既存のコードスタイルやパターンがある場合には、それに従う
  - 大幅な変更が必要な場合は理由を説明

## 技術スタック

このリポジトリは chezmoi で管理された dotfiles です。

## セキュリティ

### 機密ファイル

以下を読み取ったり変更したりすることは絶対に避けてください。

- .env ファイル
- */config/secrets.*
- */*.pem
- API キー、トークン、認証情報を含むファイル全般

### セキュリティプラクティス

- 機密ファイルを絶対にコミットしない
- シークレット情報は環境変数を使用する
- ログや出力に認証情報を含めない

## コーディングガイドライン

### 一般原則

- コードは必ず完全な形で提供する（断片的なコードは不可）
- シンプルで読みやすいコードを書く
- 適切な命名（変数、関数、クラスなど）を行う
- 関数は単一の責任を持つように設計する
- エラーハンドリングを適切に実装する
- コメントは必要な箇所にのみ付ける
- テストコードも同時に生成する
- パフォーマンスとセキュリティを考慮したコードを生成する

## git 運用ルール

### ブランチ運用

- main ブランチに直接 push しない
- 作業時は feature ブランチを使用する
- コミットメッセージは Conventional Commits に従う
- コミットメッセージは英語で記述する
